
[General]
# 参考 https://johnshall.github.io/Shadowrocket-ADBlock-Rules-Forever/lazy_group.conf

# 旁路系统。如果禁用此选项，可能会导致一些系统问题，如推送通知延迟。
bypass-system = true
# 跳过代理。此选项强制这些域名或IP的连接范围由Shadowrocket TUN接口来处理，而不是Shadowrocket代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, localhost, *.local, captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com
# TUN旁路路由。Shadowrocket TUN接口只能处理TCP协议。使用此选项可以绕过指定的IP范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32
# DNS覆写。使用普通DNS或加密DNS（如doh、doq、dot等）覆盖默认的系统DNS。有些dns over https支持http3，所以尝试查询，如果支持就切换到http3。可在doh链接后面加上#no-h3关闭。
dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,223.5.5.5,119.29.29.29
# 备用DNS。当覆写的DNS解析失败后回退备用DNS，如需指定多个DNS，可用逗号分隔。system表示回退到系统DNS。
fallback-dns-server = system
# 启用IPv6支持。false表示不启用，true表示启用。
ipv6 = false
# 首选IPv6。优先向IPv6的DNS服务器查询AAAA记录，优先使用AAAA记录。false表示不启用。
prefer-ipv6 = false
# 域名直接使用系统DNS进行解析。false表示不启用。
dns-direct-system = false
# ping数据包自动回复。
icmp-auto-reply = true
# 不开启时，REJECT策略默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false
# 私有IP应答。如果不启用该选项，域名解析返回私有IP，Shadowrocket会认为该域名被劫持而强制使用代理。
private-ip-answer = true
# 直连域名解析失败后使用代理。false表示不启用。
dns-direct-fallback-proxy = false
# 当UDP流量匹配到规则里不支持UDP转发的节点策略时重新选择回退行为，可选行为包括DIRECT、REJECT。DIRECT表示直连转发UDP流量，REJECT表示拒绝转发UDP流量。
udp-policy-not-supported-behaviour = REJECT
# DNS劫持。有些设备或软件总是使用硬编码的DNS服务器，例如Netflix通过Google DNS(8.8.8.8或8.8.4.4)发送请求，您可以使用此选项来劫持查询。
hijack-dns = 8.8.8.8:53,8.8.4.4:53
# 包含配置。如“include=a.conf”表示当前配置包含另一个配置a.conf的内容，当前配置的优先级高于a.conf。该选项是对配置建立包含关系，以满足同时使用多个配置的需求。
include = 

[Proxy]

[Proxy Group]
# 代理分组类型：
# select:手动选择节点。
# url-test:自动选择延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。
# ----------
# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 保留节点名称含有关键词A或B的节点:
# A|B
# 排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A).)^((?!(B)).)*$
# ----------
# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。
# ----------
# 不含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# ----------
👻 CHS = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=600,timeout=5,select=1,url=http://www.gstatic.com/generate_204
🍻 BiliBili = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=1,url=http://www.gstatic.com/generate_204
🍓 YouTube = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=7,url=http://www.gstatic.com/generate_204
🐉 Bahamut = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=3,url=http://www.gstatic.com/generate_204
# 🌏 Global = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=3,url=http://www.gstatic.com/generate_204
# 🤖️ OpenAi = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR , 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=4,url=http://www.gstatic.com/generate_204
# 🎮 Steam = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=1,url=http://www.gstatic.com/generate_204
# 💳 PayPal = select,PROXY,DIRECT,🇭🇰 HK, 🇹🇼 TW, 🇯🇵 JP,🇸🇬 SG, 🇰🇷 KR, 🇺🇸 US, 🇷🇺 RU, interval=86400,timeout=5,select=2,url=http://www.gstatic.com/generate_204
 

🇭🇰 HK = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=HK|Hong|hong|香港|深港|沪港|京港|港
🇹🇼 TW = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=TW|Taiwan|taiwan|台湾|台北|台中|新北|彰化
🇯🇵 JP = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=JP|Japan|japan|Tokyo|tokyo|日本|东京|大阪|京日|苏日|沪日|上日|川日|深日|广日
🇸🇬 SG = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=SG|Sing|sing|新加坡|狮城|沪新|京新|深新|杭新|广新
🇰🇷 KR = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=KR|Korea|korea|KOR|韩国|首尔|韩|韓|春川
🇺🇸 US = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=US|USA|America|america|United|united|美国|凤凰城|洛杉矶|西雅图|芝加哥|纽约|沪美|美
🇷🇺 RU = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=RU|RUS|Rus|俄罗斯|俄国|俄羅斯|莫斯科|圣彼得堡|西伯利亚|京俄|杭俄|广俄|沪俄

[Rule]

# 规则策略：
# PROXY：代理。通过首页正在使用的代理服务器转发流量。
# DIRECT：直连。连接不经过任何代理服务器。
# REJECT：拒绝。返回HTTP状态码404，没有内容。
# REJECT-DICT：拒绝。返回HTTP状态码200，内容为空的JSON对象。
# REJECT-ARRAY：拒绝。返回HTTP状态码200，内容为空的JSON数组。
# REJECT-200：拒绝。返回HTTP状态码200，没有内容。
# REJECT-IMG：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-TINYGIF：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-DROP：拒绝。丢弃IP包。
# REJECT-NO-DROP：拒绝。返回ICMP端口不可达。

# 直连策略的修正规则集。
RULE-SET,https://raw.githubusercontent.com/wlxuf/add_rule/main/direct-amend.list,DIRECT
# 代理策略的修正规则集。
RULE-SET,https://raw.githubusercontent.com/wlxuf/add_rule/main/proxy-amend.list,PROXY
# 国外常用app单独分流：YouTube，Netflix，Disney+，HBO，Spotify，Telegram，PayPal，Twitter，Facebook，Google，TikTok，GitHub，Speedtest。
# 国内常用app单独分流：苹果服务，微软服务，哔哩哔哩，网易云音乐，游戏平台，亚马逊，百度，豆瓣，微信，抖音，微博，知乎，小红书。

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Steam/Steam.list, 🎮 Steam
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list, 🍓 YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/BiliBili/BiliBili.list, 🍻 BiliBili
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Bahamut/Bahamut.list, 🐉 Bahamut
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PayPal/PayPal.list, 💳 PayPal
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list, 🤖️ OpenAi

# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Instagram/Instagram.list, 🌏 Global
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list, 🌏 Global
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Twitter/Twitter.list, 🌏 Global
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Niconico/Niconico.list, 🌏 Global
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Pixiv/Pixiv.list, 🌏 Global
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/DMM/DMM.list, 🌏 Global

RULE-SET,https://raw.githubusercontent.com/ChellyL/anti-ip-attribution/main/generated/surge.list, 👻 CHS
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Weibo/Weibo.list, 🐺️ CHS
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/DouBan/DouBan.list, 🐺️ CHS
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/BaiDuTieBa/BaiDuTieBa.list, 🐺️ CHS

# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Microsoft/Microsoft.list,PROXY
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list,PROXY
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list,PROXY
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GoogleFCM/GoogleFCM.list,PROXY
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list,PROXY
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Game/Game.list,PROXY
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Cloudflare/Cloudflare.list,PROXY
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Proxy/Proxy.list,PROXY
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GlobalMedia/GlobalMedia.list,PROXY
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list,PROXY
# RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Epic/Epic.list,PROXY

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/AdvertisingLite/AdvertisingLite.list, REJECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Hijacking/Hijacking.list, REJECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Privacy/Privacy.list, REJECT
DOMAIN-SET,https://anti-ad.net/surge2.txt,REJECT

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/China/China.list, DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaIPs/ChinaIPs.list, DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMedia/ChinaMedia.list, DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list, DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Download/Download.list, DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PrivateTracker/PrivateTracker.list, DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Lan/Lan.list, DIRECT
# RULE-SET,https://raw.githubusercontent.com/soffchen/GeoIP2-CN/release/clash-ruleset.list, DIRECT

# 表示CN地区的IP分流走直连，GEOIP数据库用来判断IP是否属于CN地区。默认使用Shadowrocket自带的GEOIP数据库，如果您想替换其他数据库，可在 设置 - GeoLite2数据库 里添加和修改。
GEOIP,CN,DIRECT
# 表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
FINAL,PROXY

[Host]
# 域名指定本地值：
# example.com=1.2.3.4
# 域名指定DNS服务器：
# example.com=server:1.2.3.4
# wifi名称指定DNS服务器，如需指定多个DNS，可用逗号分隔：
# ssid:wifi名称=server:1.2.3.4
localhost = 127.0.0.1

[URL Rewrite]
# 请开启 MITM 并在域名中加入 www.google.cn
^https?://(www.)?(g|google).cn https://www.google.com 302
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302
(^https?:\/\/[\w-]+\.googlevideo\.com\/(?!dclk_video_ads).+?)&ctier=L(&.+?),ctier,(.+) $1$2$3 302 
^https?:\/\/[\w-]+\.googlevideo\.com\/(?!(dclk_video_ads|videoplayback\?)).+&oad - reject

^https?:\/\/youtubei\.googleapis\.com\/youtubei\/v\d\/player\/ad_break - reject
^https?:\/\/(www|s)\.youtube\.com\/api\/stats\/ads - reject
^https?:\/\/(www|s)\.youtube\.com\/(pagead|ptracking) - reject
^https?:\/\/s\.youtube\.com\/api\/stats\/qoe\?adcontext - reject

[Script]
# BoxJs安装脚本。
Rewrite: BoxJs = type=http-request,pattern=https?:\/\/boxjs\.(com|net),script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/box/chavy.boxjs.js, requires-body=true, timeout=120

[MITM]
hostname = -redirector*.googlevideo.com,*.googlevideo.com,www.youtube.com,s.youtube.com,youtubei.googleapis.com

ca-passphrase = Shadowrocket
ca-p12 = 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
enable = true
